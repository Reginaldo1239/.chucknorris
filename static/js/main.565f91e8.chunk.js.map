{"version":3,"sources":["components/iconCategory/style.module.css","containers/categoryJokeSelected/style.module.css","components/center/style.module.css","components/button/style.module.css","containers/categoriesJokes/style.module.css","redux/actions/categories/index.js","components/iconCategory/index.js","components/header/index.js","components/center/index.js","service/apiChuckNorris.js","config.js","containers/categoriesJokes/index.js","components/jokeItem/index.js","components/button/index.js","containers/categoryJokeSelected/index.js","pages/home/index.js","App.js","serviceWorker.js","redux/reducers/joke/index.js","redux/reducers/index.js","redux/store/index.js","index.js","components/jokeItem/style.module.css","components/header/style.module.css"],"names":["module","exports","addJokeCategories","categories","type","newJokeAction","joke","IconCategory","props","dispatch","useDispatch","className","Style","container","onClick","line","Header","headerDesktop","h2","headerMobile","iconMobile","Center","children","center","get","endPoint","a","Promise","resolver","reject","fetch","headers","Accept","then","data","status","json","catch","e","console","log","CategoriesJokesContainer","useSelector","state","visibleMenuMobile","useEffect","length","getCategory","category","alert","selectCategory","categoryJokeSelectedAction","navDesktop","listCategories","map","c","index","key","li","navMobile","JokeItem","values","value","url","icon_url","undefined","jokeEmpty","span","box","iconImg","src","Button","title","button","CategoryJokeSelectedContainer","categorySelected","getJoke","jokeItem","Home","App","Boolean","window","location","hostname","match","stateInitial","combineReducers","action","createStore","reducers","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.565f91e8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__3BeMi\",\"line\":\"style_line__fktHd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__2uhX4\",\"button\":\"style_button__2Oz7N\",\"jokeItem\":\"style_jokeItem__1ZnV4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"style_center__37IHT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"style_button__3v5l_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navDesktop\":\"style_navDesktop__1zqV9\",\"navMobile\":\"style_navMobile__1vgh9\",\"listCategories\":\"style_listCategories__2ySbW\",\"category\":\"style_category__2_Aki\",\"li\":\"style_li__2mZhw\"};","\r\n   const addJokeCategories=(categories)=>{\r\n   return {type:'ADD_JOKE_CATEGORIES',categories:categories}\r\n   }  \r\n   const categoryJokeSelectedAction = (category)=>{\r\n      return {type:'CATEGORY_JOKE_SELECTED',category}\r\n   }    \r\n   const newJokeAction = (joke)=>{\r\n      return {type:'NEW_JOKE',joke}\r\n   }\r\n   const jokeCategoriesVisibleMobileAction = ()=>{\r\n      return {type:'JOKE_CATEGORIES_VISIBLE_MOBILE'} \r\n   }\r\n \r\nexport {\r\n   addJokeCategories,\r\n   categoryJokeSelectedAction,\r\n   newJokeAction,\r\n   jokeCategoriesVisibleMobileAction};  ","import React from 'react';\r\nimport Style from './style.module.css';\r\nimport {useDispatch} from 'react-redux';\r\nimport {jokeCategoriesVisibleMobileAction} from '../../redux/actions/categories/index';\r\nexport default  function IconCategory(props){\r\n    let dispatch = useDispatch();\r\n\r\n    const jokeCategoriesVisibleMobile=()=>{\r\n        dispatch(jokeCategoriesVisibleMobileAction())\r\n    }\r\n    return(\r\n        <div className={Style.container} onClick={()=>{jokeCategoriesVisibleMobile()}}>\r\n                <div className={Style.line}></div>\r\n                <div className={Style.line}></div>\r\n                <div className={Style.line}></div>\r\n         </div>   \r\n    )\r\n}  ","import React from 'react';\r\nimport Style from './style.module.css';\r\nimport IconCategory from '../iconCategory';\r\nexport default function Header(props){\r\n\r\n    return( \r\n        <>\r\n        <header className={Style.headerDesktop}>\r\n            <h2 className={Style.h2}>chuck norris</h2>  \r\n        </header>\r\n        <header className={Style.headerMobile}>\r\n            <div >\r\n            <h2 className={Style.h2}>chuck norris</h2>\r\n            </div>\r\n            <div className={Style.iconMobile}>\r\n                \r\n                    <IconCategory></IconCategory> \r\n            </div>\r\n        </header>\r\n        </>\r\n    ) \r\n}","import React from 'react';\r\nimport Style from './style.module.css'\r\nexport default function Center(props){\r\n\r\n    let {children} = props;\r\n    return (\r\n        <div className={Style.center}>\r\n            {children}\r\n        </div>\r\n    )\r\n}  ","import fetch from 'cross-fetch';\r\n\r\nimport {URL_CHUCK_NORRIS} from '../config';\r\n\r\nexport const get = async (endPoint) =>{\r\n    return new Promise(async(resolver,reject)=>{\r\n        fetch(URL_CHUCK_NORRIS+endPoint, {\r\n          headers:{\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n         },\r\n          }).then((data)=> resolver({status:data.status,data:data.json()} ))\r\n          .catch((e)=>console.log(e))\r\n          \r\n          } )\r\n \r\n    }  ","\r\n\r\nconst URL_CHUCK_NORRIS ='https://api.chucknorris.io';\r\n\r\nexport {URL_CHUCK_NORRIS};","import React,{useEffect} from 'react';\r\nimport {get} from '../../service/apiChuckNorris'; \r\nimport {addJokeCategories,categoryJokeSelectedAction,jokeCategoriesVisibleMobileAction} from '../../redux/actions/categories'\r\nimport { useDispatch ,useSelector } from 'react-redux'\r\nimport Style from './style.module.css';\r\n\r\nexport default function CategoriesJokesContainer (){\r\n    const dispatch = useDispatch();\r\n    const categories =  useSelector(state=> state.joke.categories);\r\n    const visibleMenuMobile =  useSelector(state=> state.joke.visibleMenuMobile);  \r\n     useEffect(()=>{\r\n        if(categories.length===0){\r\n            getCategory();\r\n         }\r\n    },[categories]) \r\n    \r\nconst getCategory =async ()=>{   \r\n    let category = await get('/jokes/categories');\r\n    try{\r\n   if(category.status===200){\r\n       category = await category.data;   \r\n       console.log(category)\r\n       dispatch(addJokeCategories(category))\r\n   }else{\r\n  \r\n   }\r\n    }catch(e){\r\n     alert('ocorreu um erro')\r\n    }\r\n} \r\nconst selectCategory=(category)=>{\r\n    dispatch(categoryJokeSelectedAction(category));\r\n    dispatch(jokeCategoriesVisibleMobileAction());\r\n}\r\n \r\nreturn(\r\n <>\r\n     <nav className={Style.navDesktop}>  \r\n        <ul \r\n        className={Style.listCategories}>\r\n            {  categories.map((c,index)=>\r\n                        <div\r\n                         className={Style.category}\r\n                         key={index} >\r\n                            <li  \r\n                            onClick={()=>selectCategory(c)} \r\n                            className={Style.li}>{c}</li>\r\n                        </div>\r\n                    )\r\n                }\r\n         </ul>  \r\n      </nav>    \r\n            {visibleMenuMobile&&\r\n                <nav className={Style.navMobile}>   \r\n                <ul \r\n                className={Style.listCategories}>\r\n                        {\r\n                            categories.map((c,index)=>\r\n                                <div\r\n                                    className={Style.category}\r\n                                    key={index} >\r\n                                    <li  \r\n                                    onClick={()=>selectCategory(c)} \r\n                                    className={Style.li}>{c}</li>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </ul>  \r\n                </nav>  \r\n              }\r\n         </>\r\n )\r\n}  ","import React from 'react';\r\nimport Style from './style.module.css';\r\nexport default function JokeItem(props){\r\n    let {url,value,icon_url } = props.values;\r\n    return(\r\n        <div className={Style.container}>\r\n        {value==undefined?(\r\n            <div className={Style.jokeEmpty}>\r\n            <span className={Style.span}>select a category of joke</span>\r\n            </div>\r\n             ):(\r\n                <>  \r\n                    <div className={Style.box}>\r\n                        <img className={Style.iconImg} src={icon_url}/>\r\n                    </div>\r\n                    <div className={Style.box}>\r\n                        <span className={Style.span} >{value}</span>\r\n                    </div>\r\n                  </>\r\n                )}\r\n                </div>\r\n\r\n    ) }\r\n","import React from 'react';\r\nimport Style from './style.module.css';\r\nexport default function Button(props){\r\n    let {title} = props;\r\n    const handleClick=()=>{\r\n        props.onClick();\r\n    }\r\n    return (\r\n        <button className={Style.button} onClick={()=>handleClick()}>\r\n            {title}\r\n        </button>\r\n    )\r\n}","import React, {useEffect } from 'react';\r\nimport JokeItem from '../../components/jokeItem'\r\nimport Button from '../../components/button';\r\nimport {newJokeAction} from '../../redux/actions/categories';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {get} from '../../service/apiChuckNorris';\r\nimport Style from './style.module.css'\r\nexport default function CategoryJokeSelectedContainer(){\r\n    const category = useSelector(state=>state.joke.categorySelected);\r\n    const joke = useSelector(state=>state.joke.joke);\r\n    const dispatch = useDispatch();\r\n        useEffect(()=>{ \r\n            getJoke();\r\n        },[category]);\r\n    const getJoke =async ()=>{\r\n         let endPoint = `/jokes/random?category=${category}`;\r\n         try{\r\n         let joke =await get(endPoint);\r\n        if(joke.status===200){\r\n             joke = await joke.data;\r\n            dispatch(newJokeAction(joke));\r\n         }else {\r\n            alert('ocorreu um erro')\r\n         } \r\n            }catch(e){\r\n                alert('ocorreu um erro')\r\n            }\r\n        }\r\n    return (\r\n        <div className={Style.container}>\r\n             <div className={Style.jokeItem}>\r\n                <JokeItem \r\n                values={joke}></JokeItem>\r\n            </div>\r\n            <div className={Style.button}>\r\n                <Button\r\n                title={'next'}\r\n                onClick={()=>getJoke()}></Button>\r\n            </div>\r\n         </div>\r\n    )\r\n}  ","import React from 'react';\r\n\r\nimport Header from '../../components/header';\r\nimport Center from '../../components/center';\r\n\r\nimport CategoriesJokesContainer from '../../containers/categoriesJokes';\r\nimport CategoryJokeSelectedContainer from '../../containers/categoryJokeSelected';\r\n\r\nexport default function Home(){\r\n\r\n    return (\r\n        <div>\r\n            \r\n            <Center>\r\n            <Header></Header>\r\n                <CategoriesJokesContainer></CategoriesJokesContainer>\r\n                <CategoryJokeSelectedContainer></CategoryJokeSelectedContainer>\r\n            </Center>\r\n            </div> \r\n    ) \r\n}   ","import React from 'react';\r\nimport Home from './pages/home'\r\nfunction App() {\r\n  return (   \r\n    <Home></Home>\r\n  );\r\n  \r\n} \r\n\r\nexport default App;\r\n \r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { act } from \"react-dom/test-utils\";\r\n\r\nconst stateInitial = {categories:[],categorySelected:null,joke:{},visibleMenuMobile:false}\r\n\r\nexport const joke =(state=stateInitial,action)=>{\r\n  console.log(action.joke)\r\n  switch(action.type){\r\n      case 'ADD_JOKE_CATEGORIES':\r\n        return {...state,categories:action.categories} \r\n      case 'CATEGORY_JOKE_SELECTED':\r\n        return {...state,categorySelected:action.category};\r\n      case 'NEW_JOKE':\r\n        return {...state,joke:action.joke} ;\r\n      case 'JOKE_CATEGORIES_VISIBLE_MOBILE' :\r\n        return {...state,visibleMenuMobile:!state.visibleMenuMobile}  \r\n      default:\r\n        return state;\r\n      \r\n  }\r\n\r\n}       ","import { combineReducers } from \"redux\";\r\nimport {joke} from './joke'\r\nexport default   combineReducers({\r\n    joke:joke,\r\n    })\r\n    ","\r\nimport { createStore } from 'redux'   \r\nimport reducers from '../reducers/index';\r\n\r\nexport default   createStore(reducers);\r\n\r\n    ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './redux/store'; \r\nimport { Provider } from 'react-redux'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n   </Provider>\r\n  \r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__2Zj9z\",\"jokeEmpty\":\"style_jokeEmpty__2kuLg\",\"box\":\"style_box__13ry7\",\"iconImg\":\"style_iconImg__3XDDB\",\"span\":\"style_span__2v4XV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerMobile\":\"style_headerMobile__1L9GY\",\"headerdesktop\":\"style_headerdesktop__3BC7Z\",\"h2\":\"style_h2__1QZtY\",\"headerDesktop\":\"style_headerDesktop__3TzH7\",\"iconMobile\":\"style_iconMobile__sdqpt\"};"],"sourceRoot":""}